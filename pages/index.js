
import Head from 'next/head'
import React from 'react'
import Web3 from 'web3';
import { loadData } from '../web3/func';

export default function Home() {

//create hooks

const [number,setNumber]=React.useState(null);
const [contract, setContract]=React.useState(null);
const [addressAccount, setAddressAccount] = React.useState(null);
const [contractAddress,setContractAddress]= React.useState(null);

const [inputValue,setInputValue] = React.useState(' ');

const handleWeb3 = async ()=>
{
    const data = await loadData();
    //when click on button and get it
    setNumber(data.number);
    setContract(data.Contract_Web3_Connection);
    setAddressAccount(data.addressAccount);
    setContractAddress(data.Contract_Address);

};
// call from remix function changing 
const handleChangeNumber = async()=>{

  const data= await contract.methods.changeNumber(Number(inputValue)).encodeABI();
  //genarte next hash after deploymnet and wrap the adress its json/rpc method of web3
  const nonce = await web3.eth.getTransactionCount(addressAccount);
 // estatmate the gass fee
 const estimateGas= await contract.methods.changeNumber(Number(inputValue)).estimateGas({
  froom: addressAccount,
  to: contractAddress,
  nonce:nonce,
  data:data
 });
 
 const params = {
  froom: addressAccount,
  to: contractAddress,
  gas: web3.utils.toHex(estimateGas),
  gasPrice: web3.utils.toHex(web3.utils.toWei('50', 'gwei')),
  data:data
 };

 //call the ethrum fetch all the params instance
 ethereum.request({
  method: 'eth_sendTransaction',
  params: [params]
 }).then((res) =>{
  console.log("Transaction Hash", res);
  const interval = setInterval(()=>{
    web3.eth.getTransactionReceipt(res,(err,rec) => {
      if(rec)
      {
        handleWeb3();
        setInputValue('');
        clearInterval(interval);
      }
      if(err){
        console.log('Error', err);
      }
    });
  },500);
 });





};




return (

    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

       
       <h1>web3 Connection</h1>
       <button onClick={handleWeb3}>Connect to web3</button>
       <h3>Number:{number}</h3>

       <input type="number" value={inputValue} onChange={(e) => setInputValue(e.currentTarget.value)} placeholder="put a number"/>
      <button onClick={handleChangeNumber}>Change Number</button>
    </>
  )
}
